{"EDITOR_STATE":{"allProjectFiles":{"cefbc6cc-07fe-472f-8869-7373ced14325":{"id":"cefbc6cc-07fe-472f-8869-7373ced14325","parent":null,"name":"PH","type":"DIRECTORY","isDirectory":true,"children":["4da6a455-3141-4402-90a2-dc12f55e1261","4ee947e4-596b-4015-a56e-b81b8e3154a1","f2355373-ef26-4674-862f-1722a8fe4727"],"isRemovable":false,"filePath":"PH"},"4da6a455-3141-4402-90a2-dc12f55e1261":{"id":"4da6a455-3141-4402-90a2-dc12f55e1261","parent":"cefbc6cc-07fe-472f-8869-7373ced14325","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"PH/lambda.js","code":"let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\nlet md5 = require('md5');\nlet queryString = require('query-string');\n\nexports.handler = function (event, context, callback) {\n\n    let response = {\n        \"isBase64Encoded\": true,\n        \"statusCode\": 200,\n        \"headers\": {\n            \"headerName\": \"headerValue\"\n        },\n        \"body\": \"...\"\n    }\n\n    let params = queryString.parse(event.body);\n    let secret = process.env.PH_SECRET;\n\n    let md5sig = (md5(\n        params.merchant_id + params.order_id + params.payhere_amount + params.payhere_currency + params.status_code + (md5(secret)).toUpperCase()\n    )).toUpperCase();\n\n    let verified = md5sig === params.md5sig && params.status_code === '2' && params.payhere_currency === 'LKR'\n        && (params.payhere_amount === \"5000.00\" || params.payhere_amount === \"3000.00\");\n\n    console.log(\"Saving Item\", params, verified);\n\n    //save new order\n    ddb.update({\n        TableName: 'btofac',\n        Key: {\n            'order_id': params.order_id\n        },\n        ExpressionAttributeNames: {\n            '#verified': 'verified',\n            '#phr': 'payhere_response'\n        },\n        ExpressionAttributeValues: {\n            ':verified': verified,\n            ':phr': params\n        },\n        UpdateExpression: 'set #verified = :verified, #phr = :phr'\n    }).promise().then(function (data) {\n        console.log(\"Successfully updated order\", params.order_id);\n        callback(null, response);\n    }).catch(function (err) {\n        //handle error\n        console.error(\"Error in updating order\", params.order_id, err);\n        callback(null, response);\n    });\n}","triggers":[{"resourceName":"apigusEast1APITesttestpost","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"},"testCases":{"04e7a54f-cbe0-4cd3-81c5-56ea7873943b":{"id":"04e7a54f-cbe0-4cd3-81c5-56ea7873943b","name":"Unnamed event","functionId":"4da6a455-3141-4402-90a2-dc12f55e1261","event":"{\n    \"body\": \"merchant_id=1211453&order_id=ItemNo12345&payment_id=320025020486&payhere_amount=1000.00&payhere_currency=LKR&status_code=2&md5sig=CB1334B08C147E7CB00035593C9BEB86&custom_1&custom_2&status_message=Successfully+completed+the+payment.&recurring=0\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"}}},"4ee947e4-596b-4015-a56e-b81b8e3154a1":{"id":"4ee947e4-596b-4015-a56e-b81b8e3154a1","parent":"cefbc6cc-07fe-472f-8869-7373ced14325","name":"create.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"PH/create.js","code":"let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\nlet uuid = require('uuidv4');\n\nexports.handler = function (event, context, callback) {\n    let response = {\n        \"statusCode\": 201,\n        \"headers\": {\n            \"Access-Control-Allow-Origin\": \"*\"\n        },\n        \"body\": \"{}\"\n    }\n\n    let orderId = uuid();//new order id\n\n    console.log(\"Creating order\", orderId);\n\n    let Item = JSON.parse(event.body);\n    Item.verified = false;\n    Item.order_id = orderId;\n\n    ddb.put({\n        TableName: 'btofac',\n        Item: Item\n    }).promise().then(function (data) {\n        response.body = JSON.stringify({\n            order_id: orderId\n        });\n        callback(null, response);\n    }).catch(function (err) {\n        console.error(\"Error in creating order\", orderId, err);\n        response.body = \"Error in creating order : \" + orderId;\n        response.statusCode = 500;\n        callback(null, response);\n    });\n}","triggers":[{"resourceName":"apigusEast1APITestcreatepost","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"}},"f2355373-ef26-4674-862f-1722a8fe4727":{"id":"f2355373-ef26-4674-862f-1722a8fe4727","parent":"cefbc6cc-07fe-472f-8869-7373ced14325","name":"get.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"PH/get.js","code":"let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nvar api_key = process.env.MAIL_KEY;\nvar domain = 'backtofaculty.com';\nvar mailgun = require('mailgun-js')({ apiKey: api_key, domain: domain });\n\nfunction createHtmlResponse(valid, Item = {}, orderId) {\n    let invalidResponse = `<p>Payment not processed or invalid payment. Reference number : ${orderId}</p>`;\n    let validResponse = `<div>\n    <h1>This is your ticket</h1>\n    <h2>${Item.items}</h2>\n    <h3>A day of fun filled activities for all of you who passed out from j'pura, just to take you down memory lane!</h3>\n    <h3>LKR ${Item.amount} - ${Item.has_spouse ? \"Couple Ticket\" : \"Single Ticket\"}</h3>\n    <p>${Item.first_name} ${Item.last_name} ${Item.has_spouse ? 'with ' + Item.spouse_name : ''}</p>\n    <img src=\"https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${Item.order_id}\"/>\n    <p>Order ID : ${Item.order_id}</p>\n    <p>Bookmark or print this page. Bring this entire page with you to the event.</p>\n    <a href=\"http://medical.sjp.ac.lk/index.php/back-to-faculty\">Back to Faculty Home Page</a>\n</div>`;\n    return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Back To Faculty - Ticket</title>\n</head>\n<body>\n${valid ? validResponse : invalidResponse}\n</body>\n</html>`\n}\n\nexports.handler = function (event, context, callback) {\n\n    let response = {\n        \"isBase64Encoded\": true,\n        \"statusCode\": 200,\n        \"headers\": {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-type\": \"text/html\",\n            \"charset\": \"utf-8\"\n        },\n        \"body\": \"{}\"\n    }\n\n    let orderId = event.queryStringParameters.order_id;\n\n    console.log(\"Fetching order\", orderId);\n\n    ddb.get({\n        TableName: 'btofac',\n        Key: { 'order_id': orderId }\n    }).promise().then(function (data) {\n        console.log(\"Fectched order\", orderId, data);\n        //send mail\n        var ticketHtml = createHtmlResponse(data.Item && data.Item.verified, data.Item, orderId);\n        var emailData = {\n            from: 'Back to Faculty <tickets@backtofaculty.com>',\n            to: data.Item.email,\n            subject: 'Back to Faculty e-Ticket',\n            html: ticketHtml\n        };\n        mailgun.messages().send(emailData, function (error, body) {\n            console.log(error,body);\n        });\n        response.body = ticketHtml;\n        callback(null, response);\n    }).catch(function (err) {\n        console.error(\"Error in fecting order\", orderId, err);\n        response.body = \"Error in fetching order\";\n        callback(null, response);\n    });\n}","triggers":[{"resourceName":"apigusEast1APITestgetget","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"}}},"deletedFiles":[],"rootNode":"cefbc6cc-07fe-472f-8869-7373ced14325","openFiles":["4da6a455-3141-4402-90a2-dc12f55e1261","4ee947e4-596b-4015-a56e-b81b8e3154a1","f2355373-ef26-4674-862f-1722a8fe4727"],"currentFileId":"f2355373-ef26-4674-862f-1722a8fe4727","resources":{"apigusEast1APITesttestpost":{"name":"apigusEast1APITesttestpost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":0,"apiName":"APITest","endpointType":"EDGE","resourceMode":0,"resourceName":"test","resourcePath":"/test","restMethod":"POST","proxyIntegration":true,"enableCORS":false,"stageMode":0,"stageName":"staging"},"globallyEditable":true},"ddbbtofac":{"name":"ddbbtofac","type":"DynamoDB","config":{"mode":0,"operation":"get","table":{"arn":"","name":"btofac","partitionKey":"order_id","partitionKeyType":"S","hasSortKey":false,"sortKey":"","sortKeyType":"S","mode":0},"parameters":{"Key":{"order_id":"@{orderId}"},"Item":{},"ExpressionAttributeValues":{}},"validator":{"validatableFields":{},"validity":true},"valid":true},"globallyEditable":false},"apigusEast1APITestcreatepost":{"name":"apigusEast1APITestcreatepost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":0,"apiName":"APITest","endpointType":"EDGE","resourceMode":0,"resourceName":"create","resourcePath":"/create","restMethod":"POST","proxyIntegration":true,"enableCORS":true,"stageMode":0,"stageName":"staging"},"globallyEditable":true},"apigusEast1APITestgetget":{"name":"apigusEast1APITestgetget","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":0,"apiName":"APITest","apiId":"0giiidtq0k","endpointType":"EDGE","rootResourceId":"ezedtotklk","existingResources":{"/test":"0ei3pd","/":"ezedtotklk","/create":"ur7j38"},"resourceMode":0,"resourceName":"get","resourcePath":"/get","restMethod":"GET","proxyIntegration":true,"enableCORS":true,"stageMode":0,"stageName":"staging"},"globallyEditable":true}},"envVariables":[{"lambdaId":"all","varKey":"SIGMA_AWS_ACC_ID","varValue":null,"shouldPersist":false,"editable":false},{"lambdaId":"all","varKey":"MAIL_KEY","varValue":null,"shouldPersist":false,"editable":true},{"lambdaId":"all","varKey":"PH_SECRET","varValue":null,"shouldPersist":false,"editable":true}],"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"md5":{"name":"md5","version":"2.2.1"},"query-string":{"name":"query-string","version":"6.1.0"},"uuidv4":{"name":"uuidv4","version":"1.0.1"},"mailgun-js":{"name":"mailgun-js","version":"0.20.0"}}},"lambdaId":"4da6a455-3141-4402-90a2-dc12f55e1261"},"PROJECT_META":{"projectName":"PH","projectDescription":"","projectVersion":"1.0.0","projectRegion":"us-east-1","lastSave":1534182533530},"VCS_STATE":{"provider":"GitHub","repo":{"name":"phtest2","url":"https://github.com/rahi9208/phtest2"}}}